LOOP.l

%option noyywrap
%{
#include<stdio.h>
#include<stdlib.h>
#include "y.tab.h"
%}
alpha [A-Za-z]
digit [0-9]
%%
[ \t\n]
while   return WHILE;
for     return FOR;
{digit}+    return NUM;
{alpha}({alpha}|{digit})*    return ID;
"<="    return LE;
">="    return GE;
"=="    return EQ;
"!="    return NE;
"||"    return OR;
"&&"    return AND;
"printf("[^)]*")"       return PRINT;
"scanf("[^)]*")"        return SCAN;
.    return yytext[0];
%%



LOOP.y
%{
#include <stdio.h>
#include <stdlib.h>
extern FILE *yyin;
extern int yylex();
%}
%token ID NUM WHILE LE GE EQ NE OR AND FOR PRINT SCAN
%right '='
%left AND OR
%left '<' '>' LE GE EQ NE
%left '+''-'
%left '*''/'
%right UMINUS
%left '!'
%%
prog  : s prog
      |
      ;
s     : st1 {printf("Input accepted.\n");};
st1   : WHILE'(' e2 ')' '{' st '}'
      | FOR '(' e ';' e2 ';' e ')' '{' st '}'
st    : st st
      | e';'
      ;
e     : ID'='e
      | e'+'e
      | e'-'e
      | e'*'e
      | e'/'e
      | e'<'e
      | e'>'e
      | e '+' '+'
      | e '-' '-'
      | e LE e
      | e GE e
      | e EQ e
      | e NE e
      | e OR e
      | e AND e
      | PRINT
      | SCAN
      | ID
      | NUM
      ;
e2    : e'<'e
      | e'>'e
      | e LE e
      | e GE e
      | e EQ e
      | e NE e
      | e OR e
      | e AND e
      | ID
      | NUM
      ;

%%

void yyerror(char *s){
        printf("%s\n",s);
}

int main(){
   yyin = fopen("sample.c","r");
   yyparse();
}






TOKEN.L

%option noyywrap
%{
#include<stdio.h>
#include"y.tab.h"
extern int yylval;
void yyerror(char *s);
%}
%%
[-]?[0-9]+   {yylval=atoi(yytext);return NUMBER;}
[+*-/\n()]    {return *yytext;}
[ \t]         {;}
.             {yyerror("invalid");}
%%






PREFIX.Y
%{
#include<stdio.h>
int yylex(void);
void yyerror(const char *s);
%}
%token NUMBER
%%
program : program expr '\n' {printf("%d",$2);}
        |
        ;
expr : NUMBER {$$=$1;}
     | '+' expr expr {$$=$2+$3;}
     | '-' expr expr {$$=$2-$3;}
     | '*' expr expr {$$=$2*$3;}
     | '/' expr expr {$$=$2/$3;}
     ;
%%
void yyerror(const char *s)
{
    fprintf(stderr,"error:%s\n",s);
}
int main(){
    yyparse();
    return 0;
}









FOR TO WHILE.L

%option noyywrap

%{

#include<string.h>

#include<stdio.h>

char *incr;

%}



%x loopCond

%x stmt



%%



"for" {BEGIN loopCond;}

<loopCond>"("[^;)]*";" {printf("%s\n",(yytext+1)); unput(';');}

<loopCond>";"[^;)]*";" {yytext[yyleng-1]='\0'; printf("while(%s)",(yytext+1)); unput(';');}

<loopCond>";"[^;)]*")" {yytext[yyleng-1]='\0'; incr=strdup(yytext+1); BEGIN stmt;}

<stmt>"{"[^}]* {printf("%s",yytext);}

<stmt>"}" {printf("%s;\n}",incr);BEGIN INITIAL;}

.

%%



int main(){

yyin = fopen("for.txt","r");

yylex();

return 0;

}




WHILE TO FOR.L


%option noyywrap

%{

#include<stdio.h>

#include<string.h>

char *init,*cond;

char stmts[100]="",incr[100]="";

int incrLength=0;

%}



%x whileLoop

%x stmt



%%



[^;]*;(\n)"while(" {yytext[yyleng-7]='\0'; init=strdup(yytext);BEGIN whileLoop;}

<whileLoop>[^){]*")" {yytext[yyleng-1]='\0'; cond=strdup(yytext);}

<whileLoop>"{" {BEGIN stmt;}

<stmt>[^;]*";" {strcat(stmts,incr);strcpy(incr,yytext);incrLength=yyleng;}

<stmt>"}" {incr[0]=' ';incr[incrLength-1]='\0';printf("for(%s%s;%s){\n%s\n}",init,cond,incr,stmts);BEGIN INITIAL;}



%%



int main(){

yyin=fopen("while.txt","r");

yylex();

return 0;

}



WHILE TO DOWHILE.L

%option noyywrap
%{
#include<stdio.h>
#include<string.h>
char *init;
%}
%x loop
%%
[^;(while)]*";"      {printf("%s",yytext);}   //longest_match_so_include_while_also
"while("[^;){]*")"    {init=strdup(yytext);BEGIN loop;}
<loop>"{"[^}]*"}"       {printf("do%s%s;",yytext,init); BEGIN INITIAL; }
%%

int main(){
        yyin=fopen("wtodw.txt","r");
        yylex();
        return 0;
}


DOWHILE TO WHILE.L

%option noyywrap
%{
#include<stdio.h>
#include<string.h>
char *stmt;
char *init;
%}
%x loop
%x w
%%
[^;(do)]*";"(\n)"do{"     {yytext[yyleng-3]='\0';printf("%s",yytext);unput('{');BEGIN loop;}
<loop>"{"[^}]* {stmt=strdup(yytext);}
<loop>"}"   {BEGIN w;}
<w>"while("[^;)]*");"    {yytext[yyleng-1]='\0';printf("%s%s}",yytext,stmt);BEGIN INITIAL;}
.   {}
%%

int main(){
        yyin=fopen("dwtow.txt","r");
        yylex();
        return 0;
}


